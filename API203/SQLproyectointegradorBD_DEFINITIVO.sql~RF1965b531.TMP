 USE MASTER 

IF DB_ID('BD_PROYECTO_ACTUALIZADA3') IS NOT NULL 
 BEGIN
   USE MASTER 
    DROP DATABASE  BD_PROYECTO_ACTUALIZADA3 
  END
   CREATE DATABASE BD_PROYECTO_ACTUALIZADA3
    GO 

	USE BD_PROYECTO_ACTUALIZADA3
	 GO


/*
CREATE TABLE TB_USUARIO
(
COD_USU         INT  IDENTITY(1,1) NOT NULL ,--SE AUTOINCREMENTA
NOMBRE_USU		VARCHAR(50)		NOT NULL,--NOMBRE DE LA PERSONA NATURAL O JURIDICA
APELLIDO_USU	VARCHAR(80)		NOT NULL,--APELLIDOS DEL JUGADOR O NOMBRE COMPLETO DEL REPRESENTANTE LEGAL O DUEÑO DE LA EMPRESA
RUC_USU		VARCHAR(11)		NOT NULL,--DNI DEL JUGADOR O RUC DE EMPRESA
CORREO_USU		VARCHAR(30)		NOT NULL,--CORREO DE CONTACTO
FECH_NAC_USU	VARCHAR(100)	NOT NULL,--NACIMIENTO DEL JUGADOR O FUNDACION DE LA EMPRESA
ID_USU			VARCHAR(20)		NOT NULL,--SOLO EN CASO DE JUGADOR
PASS_USU		VARCHAR(20)		NOT NULL,--SOLO EN CASO DE JUGADOR
PRIMARY KEY (COD_USU)
)
GO*/

IF OBJECT_ID('TB_TIPO_USUARIO')IS NOT NULL
	DROP TABLE TB_TIPO_USUARIO
GO

CREATE TABLE TB_TIPO_USUARIO
(
COD_TUSU 	INT IDENTITY(1,1) NOT NULL PRIMARY KEY, 
ID_USU       VARCHAR(100) NOT NULL,
 )
GO

INSERT INTO TB_TIPO_USUARIO VALUES ('TIENDA')
INSERT INTO TB_TIPO_USUARIO VALUES ('JUGADOR')
INSERT INTO TB_TIPO_USUARIO VALUES ('REGULADOR')

CREATE TABLE TB_USUARIO_TIENDA
(
 COD_USU_TIENDA  INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
 RAZON_SOCIAL    VARCHAR(100) NOT NULL,  
 REP_LEGAL	 VARCHAR(100) NOT NULL,
 CORREO_UST		 VARCHAR(100) NOT NULL,
 DIRECCION		VARCHAR(50) NOT NULL,
 TELEFONO		CHAR(10) NOT NULL,
 FECHA_CONSTITU	VARCHAR(50) NOT NULL,
 RUC			CHAR (11) NOT NULL,
 ID_USU_TIENDA	 VARCHAR(100) NOT NULL,
 CONTRA_USU_TIENDA VARCHAR(100) NOT NULL,
  TIPO_USUARIO INT NOT NULL  REFERENCES TB_TIPO_USUARIO
 --TABLA CONCUERDA CON MOCKUP
)
GO 

CREATE TABLE TB_CIUDAD (
--SE AGREGO ESTA TABLA PARA LLENAR EL COMBO DE CIUDAD (US_004: Registro de usuario jugador)
COD_CIUDAD INT IDENTITY (1,1)  NOT NULL PRIMARY KEY,
NOMBRE VARCHAR(100) NOT NULL
)
GO

CREATE TABLE TB_USUARIO_JUGADOR 
(
 COD_JUGADOR INT IDENTITY (1,1)  NOT NULL PRIMARY KEY,
 NOM_JUGADOR VARCHAR(100) NOT NULL,
 APELLIDO_JUGADOR VARCHAR(100) NOT NULL,
 CORREO_ELECTRONICO  CHAR(50) NOT NULL,
 ID_USUARIO_JUG		VARCHAR(100) NOT NULL,
 CONTRASEÑA			VARCHAR(100) NOT NULL,
 DIRECCION			VARCHAR(50) NOT NULL, 
 COD_CIUDAD				INT NOT NULL REFERENCES TB_CIUDAD, -- CORRESPONDE COMBO DE CIUDADES ENTONCES SERIA COD_CIUDADA 
-- COD_CIUDAD INT NOT NULL REFERENCES TB_CIUDAD,  -- SERIA ESTA LINEA 
 DNI				CHAR(9) NOT NULL,
 FECHA_NACIMIENTO   DATE    NOT NULL,
 TIPO_USUARIO INT NOT NULL  REFERENCES TB_TIPO_USUARIO
)
GO

CREATE TABLE TB_NIVEL (
--SE AGREGO ESTA TABLA PARA LLENAR EL COMBO DE NIVEL (US_007: Registro de usuario regulador)
COD_NIVEL INT IDENTITY (1,1)  NOT NULL PRIMARY KEY,
NOMBRE_NIVEL VARCHAR(100) NOT NULL
)
GO

CREATE TABLE TB_CATEGORIA (
--SE AGREGO ESTA TABLA PARA LLENAR EL COMBO DE CATEGORIA (US_007: Registro de usuario regulador)
COD_CATEGORIA INT IDENTITY (1,1)  NOT NULL PRIMARY KEY,
NOMBRE_CATEGORIA VARCHAR(100) NOT NULL
)
GO
 
CREATE TABLE TB_USUARIO_REGULADOR
(
 COD_REG   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
 NOM_REG   VARCHAR (100) NOT NULL,  
 APE_REG   VARCHAR (100) NOT NULL,
 CORREO	   CHAR(50) NOT NULL,
 --SE TIENE QUE DESCOMENTAR PARA HACER LA MODIFICAION PERTINENTE A LA TABLA PARA QUE GUARDE LOS CODGIDOS DE LAS TABLAS 
 --REFERENCIADAS CUYOS VALORES LLENAN LOS CAMPOS NIVEL Y CATEGORIA
 COD_CATEGORIA INT   NOT NULL REFERENCES TB_CATEGORIA, --REFERENCES TB_CATEGORIA,
 COD_NIVEL     INT   NOT NULL REFERENCES TB_NIVEL,  --REFERENCES TB_NIVEL,
 COD_ID    CHAR(10) NOT NULL, --DATO PROVEIDO POR LA EMPRESA SERTIFICADORA DEL USUARIO
 ID_USU_REGUL	 VARCHAR(100) NOT NULL, -- AGREGADOS
 CONTRA_USU_REGUL VARCHAR(100) NOT NULL, -- AGREGADOS
  TIPO_USUARIO INT NOT NULL  REFERENCES TB_TIPO_USUARIO
)
GO 

CREATE TABLE TB_ESTADO(
COD_ESTADO INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
DES_ESTADO VARCHAR(50) NOT NULL
)
GO

CREATE TABLE TB_MOTIVO(
COD_MOT INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
DES_MOT VARCHAR(100) NOT NULL
)
GO

CREATE TABLE TB_EVENTO
(
COD_EVEN		INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
NOMBRE_EVEN		VARCHAR(100) NOT NULL,
DESC_EVEN		VARCHAR(100) NOT NULL,
INFO			VARCHAR(100) NOT NULL,
FECH_INC_EVEN		VARCHAR(50) NOT NULL,
FECH_FIN_EVEN		VARCHAR(50) NOT NULL,
CIUDAD_EVEN			VARCHAR(20) NOT NULL,
DIRECCION			VARCHAR(20) NOT NULL,
REFERENCIA			VARCHAR(20) NOT NULL,
--CAPACIDAD_LIMT_EVEN     INT NOT NULL,
--NOMBRE_PROMOTOR		VARCHAR(50) NOT NULL, 
CANT_ENTRADA		INT  NOT NULL,
PRECIO				MONEY NOT NULL,
--MIN_CANT_ORD		INT  NOT NULL,
--CANT_DISP			INT  NOT NULL,
--MAX_CANT_USU		INT  NOT NULL,
--DESC_ENTRADA		VARCHAR(50) NOT NULL,
--NOMBRE_EMPRESA		VARCHAR(50) NOT NULL,
--RUC_EMPRESA			CHAR(11) NOT NULL, 
--NUMB_CUENTA			CHAR(12) NOT NULL,	
--BANCO				VARCHAR(50) NOT NULL,
--TIPO_MONEDA			CHAR (3) NOT NULL,
--NOMBRE_CONTACTO		VARCHAR(50) NOT NULL,
--TELF_CONTACTO		VARCHAR(10) NOT NULL,
--EMAIL_CONTACTO		VARCHAR(20) NOT NULL,									
--DECR_PREMIO_EVENT	VARCHAR(100) NOT NULL,
COD_USU_TIENDA  INT NOT NULL REFERENCES TB_USUARIO_TIENDA,
COD_ESTADO INT NOT NULL REFERENCES TB_ESTADO
)
GO

ALTER TABLE TB_EVENTO
ADD CONSTRAINT  COD_USU_TIENDA FOREIGN KEY(COD_USU_TIENDA) REFERENCES TB_USUARIO_TIENDA
GO

CREATE TABLE TB_USUARIOXEVENTO(
COD_COMPRA INT NOT NULL PRIMARY KEY,
COD_EVEN		INT NOT NULL,
COD_USU_TIENDA INT NOT NULL
)
GO


ALTER TABLE TB_USUARIOXEVENTO
ADD CONSTRAINT  COD_USU_TIENDA2 FOREIGN KEY(COD_USU_TIENDA) REFERENCES TB_USUARIO_TIENDA
GO
ALTER TABLE TB_USUARIOXEVENTO
ADD CONSTRAINT  COD_EVEN FOREIGN KEY(COD_EVEN) REFERENCES TB_EVENTO
GO

CREATE TABLE TB_REGULADORXEVENTO(
COD_SOLICITUD_EVENTO INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
COD_REG				 INT NOT NULL, 
COD_EVEN			 INT NOT NULL,
ESTADO				 INT NOT NULL 
)
GO


ALTER TABLE  TB_REGULADORXEVENTO
ADD CONSTRAINT COD_REG FOREIGN KEY (COD_REG) REFERENCES TB_USUARIO_REGULADOR
GO

ALTER TABLE  TB_REGULADORXEVENTO
ADD CONSTRAINT COD_EVEN2 FOREIGN KEY (COD_EVEN) REFERENCES TB_EVENTO
GO

CREATE TABLE TB_JUEGO(
COD_JUEGO INT NOT NULL PRIMARY KEY,
NOMBRE_JUEGO VARCHAR(20) NOT NULL
)
GO

CREATE TABLE TB_VALORACION_EVEN(
--US_023: Votación de evento HISTORIA DE USUARIO PARA LA CUAL SE UTILIZARA LA PRESENTE TABLA
COD_VALORACION INT NOT NULL PRIMARY KEY,
VALORACION INT NOT NULL,
COD_EVEN	INT NOT NULL REFERENCES TB_EVENTO,
COD_JUGADOR INT NOT NULL,
OBSERVACION VARCHAR(200)
)
GO

CREATE TABLE TB_PUNTUACION(
--US_022: Registro de puntuaciones jugador HISTORIA DE USUARIO PARA LA CUAL SE UTILIZARA LA PRESENTE TABLA
COD_PUNTUACION INT NOT NULL PRIMARY KEY,
PUNTUACION INT NOT NULL,
COD_EVEN	INT NOT NULL REFERENCES TB_EVENTO,
COD_JUEGO INT NOT NULL, --US_023: Votación de evento 
COD_JUGADOR INT NOT NULL
)
GO


ALTER TABLE TB_PUNTUACION
ADD CONSTRAINT  COD_JUEGO2 FOREIGN KEY(COD_JUEGO) REFERENCES TB_JUEGO
GO 

ALTER TABLE TB_PUNTUACION
ADD CONSTRAINT  COD_JUGADOR FOREIGN KEY(COD_JUGADOR) REFERENCES TB_USUARIO_JUGADOR
GO


CREATE TABLE DETALLE_EVENTO
(
COD_DEVEN	   INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
COD_EVEN		INT 	NOT NULL ,
ID_USU			VARCHAR(20) NOT NULL,
FECH_DE_INCRIP_EVENT    VARCHAR(50) NOT NULL,
LOGRO_OBTENIDO_EVENT	VARCHAR(50) NOT NULL,
PUNTUACION_EVENT        INT  NOT NULL,  -- PENDIENTE
COD_MOT INT NOT NULL REFERENCES TB_MOTIVO
)
GO

ALTER TABLE DETALLE_EVENTO
ADD CONSTRAINT  FKCODEVEN3 FOREIGN KEY(COD_EVEN) REFERENCES TB_EVENTO
GO

/*REGISTROS DE DATOS*/
INSERT INTO TB_CIUDAD VALUES('Lima')
INSERT INTO TB_CIUDAD VALUES('Madrid')
INSERT INTO TB_CIUDAD VALUES('Los Angeles')
INSERT INTO TB_CIUDAD VALUES('Paris')
INSERT INTO TB_CIUDAD VALUES('Tokio')

INSERT INTO TB_CATEGORIA VALUES('Pokemon')
INSERT INTO TB_CATEGORIA VALUES('Yugioh')

INSERT INTO TB_NIVEL VALUES('Facil')
INSERT INTO TB_NIVEL VALUES('Normal')
INSERT INTO TB_NIVEL VALUES('Dificil')
INSERT INTO TB_NIVEL VALUES('Profesional') 

INSERT INTO TB_ESTADO VALUES('APROBADO')
INSERT INTO TB_ESTADO VALUES('DESAPROBADO')

INSERT INTO TB_MOTIVO VALUES('NO CUMPLE LOS REQUISITOS')
INSERT INTO TB_MOTIVO VALUES('ES UN EVENTO SIMPLE')
INSERT INTO TB_MOTIVO VALUES('TIENE POCA ORIGINALIDAD')

INSERT INTO TB_USUARIO_REGULADOR VALUES('OSCAR','CARRION','ozuma@hotmail.com',2,4,'UR_001','usser1','633434',3)
INSERT INTO TB_USUARIO_REGULADOR VALUES('LUIS','GANDIA','chicharito@hotmail.com',1,1,'UR_003','user2','3434',3)
INSERT INTO TB_USUARIO_REGULADOR VALUES('JOSE','BARRENZUELA','mya_34@hotmail.com',2,2,'UR_002','user3','12346',3)
INSERT INTO TB_USUARIO_REGULADOR VALUES('LESLY','AGUILAR','makoto_45@hotmail.com',1,3,'UR_004','user4','1243',3)

INSERT INTO TB_USUARIO_TIENDA VALUES('Konami','Luis Gangas','luisito@hotmail.com','AV Fernando Diex Canseco 45','123654789','2010/12/8','86745653','KINDARMA','123456',1)
INSERT INTO TB_USUARIO_TIENDA VALUES('Pokemon','Ricardo Montolivo','richar_45@hotmail.com','AV Andromeda 32','965326435','2012/9/21','96249642','Kirifuda','7890',1)
INSERT INTO TB_USUARIO_TIENDA VALUES('DBZ','Antonio Candreva','ac_ds43@hotmail.com','AV Caqueta 434','694516324','2013/12/5','32976264','Meatrix','13579',1)
INSERT INTO TB_USUARIO_TIENDA VALUES('PES','Xabi ALonso','xabi_1@hotmail.com','Plaza Norte 43','937562167','2015/12/15','36423946','Yusaku','24680',1)

INSERT INTO TB_USUARIO_JUGADOR VALUES('PEDRO','CRISTOBAL','ped_cris_21@hotmail.com','MASTERPOKEMON','masterpokemon','AV. Panama 32',1,'76893456','1994/8/21',3)
INSERT INTO TB_USUARIO_JUGADOR VALUES('AUSTIN','FUJIKI','aus_213@hotmail.com','MASTERFIFA','masterfifa','av fontana 21',3,'79468234','1997/5/13',3)
INSERT INTO TB_USUARIO_JUGADOR VALUES('SERENA','KETCHUM','amor_ash_19@hotmail.com','OCTAVAGENERACION','octavageneracion','AV. Andromeda',4,'77892094','1999/1/5',3)
INSERT INTO TB_USUARIO_JUGADOR VALUES('AKIZA','FUDO','ak_fu_18@hotmail.com','5ds','5ds','AV. tiahuanaco',5,'73298439','2000/3/31',3)

INSERT INTO TB_EVENTO values ('Pokemon','eventos realizados para los entreanadores pokemon','entrenadores expertos','12/2/2016','16/5/2018',
'Lima','Av andormeda 232','Buena',20,14,1,1)
INSERT INTO TB_EVENTO values ('Yugioh','eventos realizados para los duelistas','duelistas expertos','11/4/2013','26/7/2014',
'Estados Unidos','Rancho Cukamonga 3','Ma o Me',21,14.5,2,1)
INSERT INTO TB_EVENTO values ('Megaman','eventos realizados para los netnavis','netnavies expertos','12/11/2011','16/9/2012',
'Japon','32 Tokio re','Malo',30,21.2,3,2)
INSERT INTO TB_EVENTO values ('Smash Bros','eventos realizados para los jugadores amantes de la franquicia','jugadores expertos','12/2/2016','16/5/2018',
'Francia','Av Searchman 32','Regular',12,30.2,1,1)


/*PROCEDURES*/
/*LOGIN*/
IF OBJECT_ID('USP_LOGIN')IS NOT NULL
	DROP PROCEDURE USP_LOGIN
GO



/*USUARIO_REGULADOR*/
IF OBJECT_ID('USP_REGISTRO_USUARIO_REGULADOR')IS NOT NULL
	DROP PROCEDURE USP_REGISTRO_USUARIO_REGULADOR
GO

CREATE PROCEDURE USP_REGISTRO_USUARIO_REGULADOR
	@NOMBRE_USU_REG VARCHAR(100),
	@APELLIDOS_USU_REG VARCHAR(100),
	@CORREO_REG CHAR(50),
	@CATEGORIA_REG INT,
	@NIVEL_REG INT,
	@COD_ID_REG VARCHAR(20),
	@ID_USU_REGUL	 VARCHAR(100) , -- AGREGADOS
	@CONTRA_USU_REGUL VARCHAR(100)  -- AGREGADOS
AS
INSERT INTO TB_USUARIO_REGULADOR VALUES(@NOMBRE_USU_REG,
@APELLIDOS_USU_REG,@CORREO_REG,@CATEGORIA_REG,@NIVEL_REG,
@COD_ID_REG,@ID_USU_REGUL,@CONTRA_USU_REGUL,3)
go

execute USP_REGISTRO_USUARIO_REGULADOR 'alex', 'Mandela', 'larrynegro@hotmail.com',1, 2, 'UR_001','lobito01','179623'
GO

IF OBJECT_ID('USP_LISTAR_USUARIO_REGULADOR')IS NOT NULL
	DROP PROCEDURE USP_LISTAR_USUARIO_REGULADOR
GO

CREATE PROCEDURE USP_LISTAR_USUARIO_REGULADOR
AS
SELECT COD_REG ,NOM_REG, APE_REG, CORREO,
	N.COD_NIVEL, N.NOMBRE_NIVEL, COD_ID,
	C.COD_CATEGORIA, C.NOMBRE_CATEGORIA, ID_USU_REGUL,
	CONTRA_USU_REGUL
FROM TB_USUARIO_REGULADOR UR
INNER JOIN TB_CATEGORIA C
ON
UR.COD_CATEGORIA = C.COD_CATEGORIA
INNER JOIN TB_NIVEL N
ON
UR.COD_NIVEL = N.COD_NIVEL
GO

EXECUTE USP_LISTAR_USUARIO_REGULADOR
GO


IF OBJECT_ID('USP_ACTUALIZAR_USUARIO_REGULADOR')IS NOT NULL
	DROP PROCEDURE USP_ACTUALIZAR_USUARIO_REGULADOR
GO

CREATE PROCEDURE USP_ACTUALIZAR_USUARIO_REGULADOR
	@COD_USU_REG INT,
	@CATEGORIA INT,
	@NIVEL INT
AS
UPDATE TB_USUARIO_REGULADOR
SET COD_CATEGORIA = @CATEGORIA,
COD_NIVEL = @NIVEL
WHERE
COD_REG = @COD_USU_REG
GO

EXECUTE USP_ACTUALIZAR_USUARIO_REGULADOR 1, 1,1
GO


IF OBJECT_ID('USP_ELIMINAR_USUARIO_REGULADOR')IS NOT NULL
	DROP PROCEDURE USP_ELIMINAR_USUARIO_REGULADOR
GO

CREATE PROCEDURE USP_ELIMINAR_USUARIO_REGULADOR
@COD_USU_REG INT
AS
DELETE FROM TB_USUARIO_REGULADOR
WHERE 
COD_REG = @COD_USU_REG
GO

EXECUTE USP_ELIMINAR_USUARIO_REGULADOR 5
GO

/*USUARIO_JUGADOR*/
IF OBJECT_ID('USP_REGISTRO_USUARIO_JUGADOR')IS NOT NULL
	DROP PROCEDURE USP_REGISTRO_USUARIO_JUGADOR
GO

CREATE PROCEDURE USP_REGISTRO_USUARIO_JUGADOR
@NOMBRE_USU_JUGADOR VARCHAR(100),
@APELLIDO_USU_JUGADOR VARCHAR(100),
@CORREO_USU_JUGADOR VARCHAR(50),
@ID_USUARIO_JUGADOR VARCHAR(100),
@CONTRASEÑA_USU_JUGADOR VARCHAR(30),
@DIRECCION VARCHAR(50),
@CIUDAD INT,
@DNI CHAR(9),
@FECHA_NACI_USU_JUGADOR DATE
AS
INSERT INTO TB_USUARIO_JUGADOR VALUES(@NOMBRE_USU_JUGADOR,@APELLIDO_USU_JUGADOR,@CORREO_USU_JUGADOR,@ID_USUARIO_JUGADOR,@CONTRASEÑA_USU_JUGADOR,@DIRECCION,@CIUDAD,@DNI,@FECHA_NACI_USU_JUGADOR,2)
go

execute USP_REGISTRO_USUARIO_JUGADOR 'BRYAN', 'Hazard', 'bry_haz@hotmail.com','admin','admmin', 'AV Andromeda 323',1, '74682834','1996/01/28'
GO


IF OBJECT_ID('USP_LISTAR_USUARIO_JUGADOR')IS NOT NULL
	DROP PROCEDURE USP_LISTAR_USUARIO_JUGADOR
GO

CREATE PROCEDURE USP_LISTAR_USUARIO_JUGADOR
AS
SELECT COD_JUGADOR ,NOM_JUGADOR, APELLIDO_JUGADOR, CORREO_ELECTRONICO,
	DIRECCION, C.COD_CIUDAD, C.NOMBRE, FECHA_NACIMIENTO,
	DNI, ID_USUARIO_JUG, CONTRASEÑA
FROM TB_USUARIO_JUGADOR UJ
INNER JOIN TB_CIUDAD C
ON
UJ.COD_CIUDAD = C.COD_CIUDAD
GO

EXECUTE USP_LISTAR_USUARIO_JUGADOR
GO


IF OBJECT_ID('USP_ACTUALIZAR_USUARIO_JUGADOR')IS NOT NULL
	DROP PROCEDURE USP_ACTUALIZAR_USUARIO_JUGADOR
GO

	select * from TB_USUARIO_JUGADOR
	go



CREATE PROCEDURE USP_ACTUALIZAR_USUARIO_JUGADOR
@COD_USU_JUG INT,
@CORREO_USU_JUG VARCHAR(50),
@DIRECCION VARCHAR(50),
@CIUDAD INT
AS
UPDATE TB_USUARIO_JUGADOR 
SET CORREO_ELECTRONICO = @CORREO_USU_JUG,
DIRECCION = @DIRECCION,
COD_CIUDAD = @CIUDAD
WHERE
COD_JUGADOR = @COD_USU_JUG
GO

EXECUTE USP_ACTUALIZAR_USUARIO_JUGADOR 5, 'eden_hazard@hotmail.com', 'Av tiahuanco 32', 3
GO

SELECT J.COD_JUGADOR,J.NOM_JUGADOR,J.APELLIDO_JUGADOR,J.CORREO_ELECTRONICO,J.ID_USUARIO_JUG,J.CONTRASEÑA,J.DIRECCION,C.NOMBRE AS NOMBRE_CIUDAD,J.DNI,J.FECHA_NACIMIENTO 
FROM TB_USUARIO_JUGADOR AS J INNER JOIN TB_CIUDAD AS C ON J.COD_CIUDAD =C.COD_CIUDAD
GO

IF OBJECT_ID('USP_ELIMINAR_USUARIO_JUGADOR')IS NOT NULL
	DROP PROCEDURE USP_ELIMINAR_USUARIO_JUGADOR
GO

CREATE PROCEDURE USP_ELIMINAR_USUARIO_JUGADOR
@COD_USU_JUG INT
AS
DELETE FROM TB_USUARIO_JUGADOR
WHERE 
COD_JUGADOR = @COD_USU_JUG
GO

EXECUTE USP_ELIMINAR_USUARIO_JUGADOR 7
GO

/*USUARIO TIENDA*/
IF OBJECT_ID('USP_REGISTRO_USUARIO_TIENDA')IS NOT NULL
	DROP PROCEDURE USP_REGISTRO_USUARIO_TIENDA
GO

CREATE PROCEDURE USP_REGISTRO_USUARIO_TIENDA
@RAZON_SOCIAL VARCHAR(100),
@REPRESENTANTE VARCHAR(100),
@CORREO_ELECTRONICO VARCHAR(100),
@DIRECCION VARCHAR(50),
@TELEFONO CHAR(10),
@FECHA_CONSTI VARCHAR(50),
@RUC CHAR(11),
@ID_USU_TIENDA VARCHAR(100),
@CONTRASEÑA_TIENDA VARCHAR(30)
AS
INSERT INTO TB_USUARIO_TIENDA VALUES(@RAZON_SOCIAL,@REPRESENTANTE,@CORREO_ELECTRONICO,@DIRECCION,@TELEFONO,@FECHA_CONSTI,@RUC,@ID_USU_TIENDA,@CONTRASEÑA_TIENDA,1)
go

execute USP_REGISTRO_USUARIO_TIENDA 'Megaman', 'Gustavo Rodriguez', 'larry_papi@hotmail.com','Av yusaku','994375932', '2017/11/24','54353534', 'ASTRO','astro'
GO


IF OBJECT_ID('USP_LISTAR_USUARIO_TIENDA')IS NOT NULL
	DROP PROCEDURE USP_LISTAR_USUARIO_TIENDA
GO

CREATE PROCEDURE USP_LISTAR_USUARIO_TIENDA
AS
SELECT * FROM TB_USUARIO_TIENDA
GO

EXECUTE USP_LISTAR_USUARIO_TIENDA
GO


IF OBJECT_ID('USP_ACTUALIZAR_USUARIO_TIENDA')IS NOT NULL
	DROP PROCEDURE USP_ACTUALIZAR_USUARIO_TIENDA
GO

CREATE PROCEDURE USP_ACTUALIZAR_USUARIO_TIENDA
@COD_USU_TIENDA INT,
@REPRESENTANTE VARCHAR(100),
@CORREO_ELECTRONICO VARCHAR(100),
@DIRECCION VARCHAR(50),
@TELEFONO CHAR(10)
AS
UPDATE TB_USUARIO_TIENDA
SET REP_LEGAL = @REPRESENTANTE,
CORREO_UST = @CORREO_ELECTRONICO,
DIRECCION = @DIRECCION,
TELEFONO = @TELEFONO
WHERE
COD_USU_TIENDA = @COD_USU_TIENDA
GO

EXECUTE USP_ACTUALIZAR_USUARIO_TIENDA 1, 'Pedro Ojeda', 'yuyasakaki@hotmail.com', 'av la molina','999444222'
GO


IF OBJECT_ID('USP_ELIMINAR_USUARIO_TIENDA')IS NOT NULL
	DROP PROCEDURE USP_ELIMINAR_USUARIO_TIENDA
GO

CREATE PROCEDURE USP_ELIMINAR_USUARIO_TIENDA
@COD_USU_TIENDA INT
AS
DELETE FROM TB_USUARIO_TIENDA
WHERE 
COD_USU_TIENDA = @COD_USU_TIENDA
GO

EXECUTE USP_ELIMINAR_USUARIO_TIENDA 7
GO


/*EVENTOS*/
IF OBJECT_ID('USP_REGISTRAR_EVENTO') IS NOT NULL 
DROP PROCEDURE  USP_REGISTRAR_EVENTO
GO

CREATE PROC USP_REGISTRAR_EVENTO
@NOMBRE_EVEN  VARCHAR(100),
@DESCRIPCION VARCHAR(100),
@INFO			VARCHAR(100),
@FECHA_INIC		VARCHAR(50),
@FEHA_FIN		VARCHAR(50),
@CIUDAD			VARCHAR(20),
@DIRECCION		VARCHAR(20),
@REFRENCIA		VARCHAR(20),
@CANTIDAD		INT,
@PRECIO			MONEY,
@COD_USU_TIENDA INT,
@COD_ESTADO INT
AS  
INSERT  INTO TB_EVENTO VALUES (
@NOMBRE_EVEN , @DESCRIPCION ,@INFO,@FECHA_INIC	,@FEHA_FIN,@CIUDAD,
@DIRECCION,@REFRENCIA,@CANTIDAD,@PRECIO,@COD_USU_TIENDA,@COD_ESTADO)
GO

EXEC  USP_REGISTRAR_EVENTO 'PIKACHU BATTLE','GUERRA DE CARTAS','BATALLA A MUERTE CON TARJETAS','12/12/2018','30/12/2018','LIMA ','AV.ARENALES','CRUCE AV.AREQUIPA',20,10.5,2,1
GO

IF OBJECT_ID('USP_LISTAR_EVENTO')IS NOT NULL
	DROP PROCEDURE USP_LISTAR_EVENTO
GO

CREATE PROCEDURE USP_LISTAR_EVENTO
AS
SELECT COD_EVEN,NOMBRE_EVEN, FECH_INC_EVEN  FROM TB_EVENTO
GO

EXECUTE USP_LISTAR_EVENTO
GO

IF OBJECT_ID('USP_ACTUALIZACION_EVENTO') IS NOT NULL 
DROP PROCEDURE  USP_ACTUALIZACION_EVENTO
GO

CREATE PROCEDURE USP_ACTUALIZACION_EVENTO
@NOMBRE_EVEN  VARCHAR(100),
@DESCRIPCION VARCHAR(100),
@INFO			VARCHAR(100),
@FECHA_INIC		VARCHAR(50),
@FECHA_FIN		VARCHAR(50),
@CIUDAD			VARCHAR(20),
@DIRECCION		VARCHAR(20),
@REFRENCIA		VARCHAR(20),
@CANTIDAD		INT,
@PRECIO			MONEY
AS
UPDATE TB_EVENTO 
SET @DESCRIPCION =  DESC_EVEN, INFO = @INFO,
FECH_INC_EVEN = @FECHA_INIC, FECH_FIN_EVEN = @FECHA_FIN, CIUDAD_EVEN = @CIUDAD,
REFERENCIA = @REFRENCIA, CANT_ENTRADA = @CANTIDAD, PRECIO = @PRECIO
WHERE NOMBRE_EVEN =  @NOMBRE_EVEN 
GO



IF OBJECT_ID('USP_ELIMINAR_EVENTOS') IS NOT NULL 
DROP PROCEDURE  USP_ELIMINAR_EVENTOS
GO

CREATE PROCEDURE USP_ELIMINAR_EVENTOS 
@COD_EVEN	INT 
AS  
DELETE FROM TB_EVENTO
WHERE 
COD_EVEN = @COD_EVEN
GO

/*COMBOBOXES*/
--CIUDADES
IF OBJECT_ID('USP_LISTAR_CIUDAD')IS NOT NULL
	DROP PROCEDURE USP_LISTAR_CIUDAD
GO

CREATE PROCEDURE USP_LISTAR_CIUDAD
AS
SELECT * FROM TB_CIUDAD
GO

EXECUTE USP_LISTAR_CIUDAD
GO

--NIVEL
IF OBJECT_ID('USP_LISTAR_NIVEL')IS NOT NULL
	DROP PROCEDURE USP_LISTAR_NIVEL
GO

CREATE PROCEDURE USP_LISTAR_NIVEL
AS
SELECT * FROM TB_NIVEL
GO

EXECUTE USP_LISTAR_NIVEL
GO

--CATEGORIA
IF OBJECT_ID('USP_LISTAR_CATEGORIA')IS NOT NULL
	DROP PROCEDURE USP_LISTAR_CATEGORIA
GO

CREATE PROCEDURE USP_LISTAR_CATEGORIA
AS
SELECT * FROM TB_CATEGORIA
GO

EXECUTE USP_LISTAR_CATEGORIA
GO


--TIPO DE USUARIO
IF OBJECT_ID('USP_LISTAR_TIPOUSUARIO')IS NOT NULL
	DROP PROCEDURE USP_LISTAR_TIPOUSUARIO
GO

CREATE PROCEDURE USP_LISTAR_TIPOUSUARIO
AS
SELECT * FROM TB_TIPO_USUARIO
GO

EXECUTE USP_LISTAR_TIPOUSUARIO

--ESTADO DEL EVENTO
IF OBJECT_ID('USP_LISTAR_ESTADO_EVENTO')IS NOT NULL
	DROP PROCEDURE USP_LISTAR_ESTADO_EVENTO
GO

CREATE PROCEDURE USP_LISTAR_ESTADO_EVENTO
AS
SELECT * FROM TB_ESTADO
GO

EXECUTE USP_LISTAR_ESTADO_EVENTO

--MOTIVOS DE DESAPROBAR EVENTO
IF OBJECT_ID('USP_LISTAR_MOTIVO_EVENTO')IS NOT NULL
	DROP PROCEDURE USP_LISTAR_MOTIVO_EVENTO
GO

CREATE PROCEDURE USP_LISTAR_MOTIVO_EVENTO
AS
SELECT * FROM TB_MOTIVO
GO

EXECUTE USP_LISTAR_MOTIVO_EVENTO

/*TRANSACCIONES*/
IF OBJECT_ID('USP_LISTAR_EVENTOS_APROBAR')IS NOT NULL
	DROP PROCEDURE USP_LISTAR_EVENTOS_APROBAR
GO

CREATE PROCEDURE USP_LISTAR_EVENTOS_APROBAR
AS
SELECT NOMBRE_EVEN, E.DIRECCION,FECH_INC_EVEN,
FECH_FIN_EVEN, UT.RAZON_SOCIAL, DESC_EVEN FROM TB_EVENTO E
INNER JOIN TB_USUARIO_TIENDA UT
ON
UT.COD_USU_TIENDA = E.COD_USU_TIENDA
GO

EXECUTE USP_LISTAR_EVENTOS_APROBAR


IF OBJECT_ID('USP_APROBAR_EVENTOS')IS NOT NULL
	DROP PROCEDURE USP_APROBAR_EVENTOS
GO

CREATE PROCEDURE USP_APROBAR_EVENTOS
AS  
SELECT NOMBRE_EVEN, E.DIRECCION, FECH_INC_EVEN,
FECH_FIN_EVEN, UT.RAZON_SOCIAL
FROM TB_EVENTO E
INNER JOIN TB_USUARIO_TIENDA UT
ON
E.COD_USU_TIENDA = UT.COD_USU_TIENDA
GO

EXECUTE USP_APROBAR_EVENTOS 


IF OBJECT_ID('USP_DESAPROBAR_EVENTOS')IS NOT NULL
	DROP PROCEDURE USP_DESAPROBAR_EVENTOS
GO

CREATE PROCEDURE USP_DESAPROBAR_EVENTOS
AS  
SELECT NOMBRE_EVEN, E.DIRECCION, FECH_INC_EVEN,
FECH_FIN_EVEN, UT.RAZON_SOCIAL
FROM TB_EVENTO E
INNER JOIN TB_USUARIO_TIENDA UT
ON
E.COD_USU_TIENDA = UT.COD_USU_TIENDA
GO

EXECUTE USP_DESAPROBAR_EVENTOS 