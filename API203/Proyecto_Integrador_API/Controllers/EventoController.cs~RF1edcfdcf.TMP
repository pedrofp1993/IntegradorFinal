using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using ProyectoIntegrador.Negocio;
using ProyectoIntegrador.Modelos;

namespace Proyecto_Integrador_API.Controllers
{
    public class EventoController : ApiController
    {
        EventoNegocios negocios = new EventoNegocios();
        //CRUDS DE EVENTOS
        //REGISTRO
        [HttpPost]
        public string RegistroEvento(Evento evento)
        {
            string mensaje = "";
            mensaje = negocios.registroEventos(evento);
            return mensaje;
        }

        //LISTADO
        [HttpGet]
        public List<Evento> ListarEventos()
        {
            var lista = negocios.ListarEventos();
            return lista;
        }
        //RETORNE POR ID
        [HttpGet]
        public Evento GetEventoById(int id)
        {
            var lista = negocios.ListarEventosInformacion();
            Evento eventos = lista.FirstOrDefault(x => x.COD_EVEN == id);
            return eventos;
        }

        //ACTUALIZAR
        [HttpPost]
        public string ActualizarEvento(Evento evento)
        {
            string mensaje = "";
            mensaje = negocios.actualizarEventos(evento);
            return mensaje;
        }

        //ELIMINAR
        [HttpPost]
        public string EliminarEvento(Evento evento)
        {
            string mensaje = "";
            mensaje = negocios.eliminarEventos(evento.COD_EVEN);
            return mensaje;
        }


        //LISTAR EVENTOS POR APROBAR
        [HttpGet]
        public List<Evento> ListarEventosPorAprobar()
        {
            var lista = negocios.ListarEventosPorAprobar();
            return lista;
        }

        //APROBAR EVENTOS
        [HttpGet]
        public List<Evento> ListarEventosAprobados()
        {
            var lista = negocios.ListarEventosAprobados();
            return lista;
        }

        [HttpPost]
        public string EventoAprobado(Evento evento)
        {
            string mensaje = "";
            mensaje = negocios.EventosAprobados(evento);
            return mensaje;
        }

        //DESAPROBAR EVENTOS
        [HttpGet]
        public List<EventoDesaprobado> ListarEventosDesaprobados()
        {
            var lista = negocios.ListarEventosDesaprobados();
            return lista;
        }

        [HttpPost]
        public string ActualizarDesaprobado(EventoDesaprobado eventomalo)
        {
            string mensaje = "";
            mensaje = negocios.EventosDesaprobados(eventomalo);
            return mensaje;
        }

    }
}
